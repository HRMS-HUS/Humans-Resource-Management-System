services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${pg_user}
      POSTGRES_PASSWORD: ${pg_password}
      POSTGRES_DB: ${pg_db}
    ports:
      - "5432:5432"
    networks:
      - app-network

  web_backend:
    build:
      context: backend
      dockerfile: backend.Dockerfile
    image: hrms-backend:latest
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    working_dir: /app
    environment:
      PYTHONPATH: /app
      REDIS_HOST: ${REDIS_HOST}
      DB_URL: ${DB_URL}
    networks:
      - app-network
    depends_on:
      - redis
      - postgres
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # frontend:
  #   build:
  #     context: frontend
  #     dockerfile: frontend.Dockerfile
  #   image: hrms-frontend:latest
  #   ports:
  #     - "3000:80"
  #   volumes:
  #     - ./frontend:/app
  #   networks:
  #     - app-network
  #   depends_on:
  #     - web


  web_frontend:
    build:
      context: frontend
      dockerfile: frontend.Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/admin_hr_management:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_HOST: "0.0.0.0"
    networks:
      - app-network
    depends_on:
      - web_backend
    command: npm run dev -- --host 0.0.0.0
    
networks:
  app-network:
    driver: bridge